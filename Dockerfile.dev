# Multi-stage Dockerfile for DimbyBot Development

# base: Install system dependencies, Python venv, yt-dlp, ffmpeg without app code
FROM node:20-alpine AS base

RUN apk add --no-cache \
    python3 \
    py3-pip \
    ffmpeg \
    build-base \
    autoconf \
    automake \
    libtool \
    g++ \
    pipx \
    && pipx install yt-dlp \
    && (pipx ensurepath || true) \
    && (if [ -f /root/.local/bin/yt-dlp ]; then ln -s /root/.local/bin/yt-dlp /usr/local/bin/yt-dlp; fi || \
        if [ -f /usr/local/bin/yt-dlp ]; then echo "yt-dlp already in /usr/local/bin"; else echo "yt-dlp not found in common pipx paths"; exit 1; fi)

# deps: Copy package files and install ALL dependencies (including dev)
FROM base AS deps

WORKDIR /app

COPY package.json yarn.lock ./

RUN YARN_CACHE_FOLDER=/tmp/.yarn-cache yarn install

# runtime: Development runtime with full source and dependencies
FROM deps AS runtime

COPY . .

# Copy the entrypoint script
COPY entrypoint.sh entrypoint.sh

# Ensure script has correct line endings (LF) and is executable
RUN apk add --no-cache dos2unix \
    && dos2unix entrypoint.sh \
    && chmod +x entrypoint.sh

# The command will be overridden in docker-compose.dev.yml to use nodemon
# Keep the ENTRYPOINT if entrypoint.sh does necessary setup before execing the main process
# ENTRYPOINT ["/bin/sh", "/app/entrypoint.sh"]

# Default command if ENTRYPOINT wasn't used or if entrypoint.sh expects one (might need adjustment)
CMD ["yarn", "dev"]