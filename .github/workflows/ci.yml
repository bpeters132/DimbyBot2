name: CI/CD

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_BOT: ghcr.io/${{ github.repository }}/bot:latest
      IMAGE_LAVALINK: ghcr.io/${{ github.repository }}/lavalink:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build bot image
        run: |
          docker build -t $IMAGE_BOT -f Dockerfile .

      - name: Build lavalink image
        run: |
          docker build -t $IMAGE_LAVALINK -f Lavalink/Dockerfile ./Lavalink

      - name: Push bot image
        run: |
          docker push $IMAGE_BOT

      - name: Push lavalink image
        run: |
          docker push $IMAGE_LAVALINK

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate .env file
        run: |
          cat << EOF > ci_generated.env
          BOT_TOKEN=${{ secrets.BOT_TOKEN }}
          CLIENT_ID=${{ secrets.CLIENT_ID }}
          GUILD_ID=${{ secrets.GUILD_ID }}
          OWNER_ID=${{ secrets.OWNER_ID }}
          DEV_MODE=${{ secrets.DEV_MODE }}
          LOG_LEVEL=${{ secrets.LOG_LEVEL }}
          LAVALINK_HOST=${{ secrets.LAVALINK_HOST }}
          LAVALINK_PORT=${{ secrets.LAVALINK_PORT }}
          LAVALINK_PASSWORD=${{ secrets.LAVALINK_PASSWORD }}
          LAVALINK_NODE_ID=${{ secrets.LAVALINK_NODE_ID }}
          LAVALINK_SECURE=${{ secrets.LAVALINK_SECURE }}
          LAVALINK_YOUTUBE_POT_TOKEN=${{ secrets.LAVALINK_YOUTUBE_POT_TOKEN }}
          LAVALINK_YOUTUBE_POT_VISITORDATA=${{ secrets.LAVALINK_YOUTUBE_POT_VISITORDATA }}
          LAVALINK_SPOTIFY_ENABLED=${{ secrets.LAVALINK_SPOTIFY_ENABLED }}
          LAVALINK_SPOTIFY_CLIENT_ID=${{ secrets.LAVALINK_SPOTIFY_CLIENT_ID }}
          LAVALINK_SPOTIFY_CLIENT_SECRET=${{ secrets.LAVALINK_SPOTIFY_CLIENT_SECRET }}
          LAVALINK_SPOTIFY_COUNTRY_CODE=${{ secrets.LAVALINK_SPOTIFY_COUNTRY_CODE }}
          LAVALINK_SPOTIFY_PLAYLIST_LOAD_LIMIT=${{ secrets.LAVALINK_SPOTIFY_PLAYLIST_LOAD_LIMIT }}
          LAVALINK_SPOTIFY_ALBUM_LOAD_LIMIT=${{ secrets.LAVALINK_SPOTIFY_ALBUM_LOAD_LIMIT }}
          EMAIL_USER=${{ secrets.EMAIL_USER }}
          EMAIL_PASS=${{ secrets.EMAIL_PASS }}
          GITLAB_EMAIL=${{ secrets.GITLAB_EMAIL }}
          BOT_IMAGE=${{ env.IMAGE_BOT }}
          LAVALINK_IMAGE=${{ env.IMAGE_LAVALINK }}
          EOF

      - name: Copy files to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_SERVER_HOST }}
          username: ${{ secrets.DEPLOY_SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.DEPLOY_SERVER_SSH_PORT }}
          source: "ci_generated.env,docker-compose.yml"
          target: "/home/bot/"

      - name: Copy deployment script to server
        run: |
          cat << 'EOS' > ci_deploy.sh
          #!/bin/bash
          set -e
          cd /home/bot
          if [ -f .env ]; then
            export $(grep -v '^#' .env | xargs)
          fi
          sed -i "s|image: .*bot.*|image: $BOT_IMAGE|" docker-compose.yml
          sed -i "s|image: .*lavalink.*|image: $LAVALINK_IMAGE|" docker-compose.yml
          /usr/bin/docker compose down
          /usr/bin/docker compose pull
          /usr/bin/docker compose up -d
          EOS
          scp -i ${{ secrets.SSH_PRIVATE_KEY_PATH }} -P ${{ secrets.DEPLOY_SERVER_SSH_PORT }} -o StrictHostKeyChecking=accept-new ci_deploy.sh ${{ secrets.DEPLOY_SERVER_USER }}@${{ secrets.DEPLOY_SERVER_HOST }}:/home/bot/ci_deploy.sh

      - name: Run deployment script on server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DEPLOY_SERVER_HOST }}
          username: ${{ secrets.DEPLOY_SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.DEPLOY_SERVER_SSH_PORT }}
          script: |
            bash /home/bot/ci_deploy.sh 