version: '3.8'

services:
  lavalink:
    image: placeholder-lavalink # This will be replaced by the deploy script
    container_name: lavalink
    restart: unless-stopped
    environment:
      # These will be picked up by Lavalink/entrypoint.sh
      - LAVALINK_PORT=${LAVALINK_PORT}
      - LAVALINK_PASSWORD=${LAVALINK_PASSWORD}
      - LAVALINK_YOUTUBE_POT_TOKEN=${LAVALINK_YOUTUBE_POT_TOKEN}
      - LAVALINK_YOUTUBE_POT_VISITORDATA=${LAVALINK_YOUTUBE_POT_VISITORDATA}
      - LAVALINK_SPOTIFY_ENABLED=${LAVALINK_SPOTIFY_ENABLED}
      - LAVALINK_SPOTIFY_CLIENT_ID=${LAVALINK_SPOTIFY_CLIENT_ID}
      - LAVALINK_SPOTIFY_CLIENT_SECRET=${LAVALINK_SPOTIFY_CLIENT_SECRET}
      - LAVALINK_SPOTIFY_COUNTRY_CODE=${LAVALINK_SPOTIFY_COUNTRY_CODE}
      - LAVALINK_SPOTIFY_PLAYLIST_LOAD_LIMIT=${LAVALINK_SPOTIFY_PLAYLIST_LOAD_LIMIT}
      - LAVALINK_SPOTIFY_ALBUM_LOAD_LIMIT=${LAVALINK_SPOTIFY_ALBUM_LOAD_LIMIT}
    ports:
      - "${LAVALINK_PORT}:${LAVALINK_PORT}" # Map host port to container port
    networks:
      - internal

  postgres-db:
    image: postgres:15 # Or your preferred version
    container_name: postgres-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB} # Default: bot_db
      POSTGRES_USER: ${POSTGRES_USER} # Default: bot_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD} # Required in .env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - internal
    ports:
      - "5433:5432" # Map host port 5433 to container port 5432 for dev access

  bot:
    image: placeholder-bot # This will be replaced by the deploy script
    container_name: dimbybot
    restart: unless-stopped
    depends_on:
      - lavalink
      - postgres-db # Add dependency on the database
    environment:
      # These will be picked up by entrypoint.sh for lavaNodesConfig.js
      - LAVALINK_HOST=lavalink # Service name in this compose file
      - LAVALINK_PORT=${LAVALINK_PORT}
      - LAVALINK_PASSWORD=${LAVALINK_PASSWORD}
      - LAVALINK_NODE_ID=${LAVALINK_NODE_ID}
      - LAVALINK_SECURE=${LAVALINK_SECURE}
      # Pass other bot-specific env vars from .env
      - BOT_TOKEN=${BOT_TOKEN}
      - CLIENT_ID=${CLIENT_ID}
      - GUILD_ID=${GUILD_ID}
      - EMAIL_PASS=${EMAIL_PASS}
      - EMAIL_USER=${EMAIL_USER}
      - GITLAB_EMAIL=${GITLAB_EMAIL}
      # Database connection URL (uses service name 'postgres-db' as host)
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-db:5432/${POSTGRES_DB}
    volumes:
      - ./logs.log:/usr/src/app/logs.log # Mount log file
    networks:
      - internal

networks:
  internal:
    driver: bridge 

volumes:
  postgres-data: # Define the named volume for database persistence 